.fisarmonica {

  /* Accordion css variables */

  /* spacing */
  --fisarmonicaOuterBorderWidth: 3px;
  --fisarmonicaInnerBorderWidth: 1px;
  --fisarmonicaBorderRadius: 5px;
  --fisarmonicaArrowWidth: 3px;
  --fisarmonicaPadding: 1em;

  /* Colors */
  --fisarmonicaBorderColor: Gray;
  --fisarmonicaBorderColorFocus: SteelBlue;
  --fisarmonicaInnerBorderColorFocus: Gray;

  /* Arrow Colors */
  --fisarmonicaArrowColor: Gray;
  --fisarmonicaArrowColorFocus: SteelBlue;
  --fisarmonicaArrowColorDisabled: Gray;

  /* Button Colors */
  --fisarmonicaButtonColor: black;
  --fisarmonicaButtonColorFocus: black;
  --fisarmonicaButtonColorDisabled: Grey;
  --fisarmonicaButtonBackground: white;
  --fisarmonicaButtonBackgroundFocus: AliceBlue;
  --fisarmonicaButtondBackgroundDisabled: WhiteSmoke;

  /* Seection Colors */
  --fisarmonicaSectionColor: black;
  --fisarmonicaSectionBackground: white;

  /* base styles */
  border: var(--fisarmonicaOuterBorderWidth) solid var(--fisarmonicaBorderColor);
  border-radius: var(--fisarmonicaBorderRadius);
}

/* Button titles */

.fisarmonica button {
  font-family: inherit;
  font-size: inherit;
  color: var(--fisarmonicaButtonColor);
  background: var(--fisarmonicaButtonBackground);
  border: none;
  outline: none;
  display: flex;
  justify-content: space-between;
  width: 100%;
  text-align: left;
}

/* Disabled titles */

.fisarmonica button[disabled] {
  color: inherit;
  color: var(--fisarmonicaButtonColorDisabled);
  background: var(--fisarmonicaButtondBackgroundDisabled);
}

/* Disabled titles hover state */

.fisarmonica button[disabled]:hover {
  cursor: not-allowed;
}

/* Arrow */

.fisarmonica button::after {
  content: '';
  display: block;
  border: solid var(--fisarmonicaArrowColor);
  border-width: 0 var(--fisarmonicaArrowWidth) var(--fisarmonicaArrowWidth) 0;
  width: 0.75em;
  height: 0.75em;
  transform: translate(-0.25em, -0.15em) rotate(45deg);
}

/* Global padding */

.fisarmonica button,
.fisarmonica dd {
  padding: var(--fisarmonicaPadding);
}

/* Internal border */

.fisarmonica dd + dt {
  border-top-style: solid;
  border-color: var(--fisarmonicaBorderColor);
  border-top-width: var(--fisarmonicaInnerBorderWidth);
}

.fisarmonica button[aria-expanded="true"] {
  border-bottom-style: solid;
  border-bottom-width: var(--fisarmonicaInnerBorderWidth);
}

.fisarmonica button[aria-expanded="true"]:focus {
  border-color: var(--fisarmonicaInnerBorderColorFocus);
}

/* Seections */

.fisarmonica dd {
  color: var(--fisarmonicaSectionColor);
  background: var(--fisarmonicaSectionBackground);
  margin: 0;
  height: auto;
  transform: scaleY(1);
  transform-origin: bottom;
  transition: transform 0.15s linear;
}

/* states */

.fisarmonica.js-focus {
  border-color: var(--fisarmonicaBorderColorFocus);
}

.fisarmonica.js-focus dd + dt {
  border-color: var(--fisarmonicaInnerBorderColorFocus);
}

.fisarmonica dd.js-is-hidden {
  transform: scaleY(0);
  height: 0;
  padding: 0;
  border: none;
  overflow: hidden;
}

.fisarmonica button:focus {
  color: var(--fisarmonicaButtonColorFocus);
  background: var(--fisarmonicaButtonBackgroundFocus);
}

.fisarmonica button:focus::after {
  border-color: var(--fisarmonicaArrowColorFocus);
}

.fisarmonica button[disabled]::after {
  border-color: var(--fisarmonicaArrowColorDisabled);
}

.fisarmonica button[aria-expanded="true"]::after {
  transform: translate(-0.25em, 0.15em) rotate(-135deg);
}
